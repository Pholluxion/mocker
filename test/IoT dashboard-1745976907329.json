{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 3,
  "links": [],
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "cekdhratfe7eod"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 20
              },
              {
                "color": "green",
                "value": 50
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 4,
        "x": 0,
        "y": 0
      },
      "id": 3,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "11.5.0",
      "targets": [
        {
          "query": "from(bucket: \"iotuis\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"topic\"] == \"smartCampus/batteryStatus\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"telegraf\")\r\n  |> filter(fn: (r) => r[\"project\"] == \"smartcampusuis\")\r\n  |> filter(fn: (r) => r[\"topic\"] == \"smartCampus/batteryStatus\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"metrics_0_value\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Estado de Carga de BaterÃ­a",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "cekdhratfe7eod"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 800,
          "min": 300,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "ppm"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 4,
        "x": 4,
        "y": 0
      },
      "id": 1,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.5.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "cekdhratfe7eod"
          },
          "query": "from(bucket: \"iotuis\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\r\n  |> filter(fn: (r) => r[\"topic\"] == \"smartCampus/co2Level\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"metrics_0_value\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"telegraf\")\r\n  |> filter(fn: (r) => r[\"project\"] == \"smartcampusuis\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Nivel de CO2 ",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "cekdhratfe7eod"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "purple",
            "mode": "fixed"
          },
          "custom": {
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "stacking": {
              "group": "A",
              "mode": "none"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "dB"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 7,
        "x": 8,
        "y": 0
      },
      "id": 6,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0",
      "targets": [
        {
          "query": "from(bucket: \"iotuis\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\r\n  |> filter(fn: (r) => r[\"topic\"] == \"smartCampus/noiseLevel\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"telegraf\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"metrics_0_value\")\r\n  |> filter(fn: (r) => r[\"project\"] == \"smartcampusuis\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Nivel de Ruido Ambiental",
      "type": "histogram"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "cekdhratfe7eod"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "orange",
            "mode": "fixed"
          },
          "custom": {
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "stacking": {
              "group": "A",
              "mode": "none"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 9,
        "x": 15,
        "y": 0
      },
      "id": 7,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0",
      "targets": [
        {
          "query": "from(bucket: \"iotuis\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\r\n  |> filter(fn: (r) => r[\"topic\"] == \"smartCampus/sensor-response-time\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"metrics_0_value\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"telegraf\")\r\n  |> filter(fn: (r) => r[\"project\"] == \"smartcampusuis\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Tiempos de Respuesta",
      "type": "histogram"
    },
    {
      "datasource": {
        "uid": "cekdhratfe7eod"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-BlPu"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "humidity"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 4,
        "x": 0,
        "y": 6
      },
      "id": 4,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": true,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.5.0",
      "targets": [
        {
          "query": "from(bucket: \"iotuis\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\r\n  |> filter(fn: (r) => r[\"topic\"] == \"smartCampus/relativeHumidity\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"telegraf\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"metrics_0_value\")\r\n  |> filter(fn: (r) => r[\"project\"] == \"smartcampusuis\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Humedad Relativa",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "cekdhratfe7eod"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "super-light-green",
                "value": null
              },
              {
                "color": "green",
                "value": 10
              },
              {
                "color": "dark-green",
                "value": 20
              },
              {
                "color": "super-light-yellow",
                "value": 30
              },
              {
                "color": "light-yellow",
                "value": 40
              },
              {
                "color": "yellow",
                "value": 50
              },
              {
                "color": "super-light-red",
                "value": 60
              },
              {
                "color": "light-red",
                "value": 70
              },
              {
                "color": "red",
                "value": 80
              },
              {
                "color": "semi-dark-red",
                "value": 100
              }
            ]
          },
          "unit": "velocitykmh"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 4,
        "x": 4,
        "y": 6
      },
      "id": 2,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "mean"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "11.5.0",
      "targets": [
        {
          "query": "from(bucket: \"iotuis\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\r\n  |> filter(fn: (r) => r[\"topic\"] == \"smartCampus/windSpeed\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"metrics_0_value\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"telegraf\")\r\n  |> filter(fn: (r) => r[\"project\"] == \"smartcampusuis\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Velocidad del Viento",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "cekdhratfe7eod"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "always",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "kwatth"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 12
      },
      "id": 5,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "timezone": [
          "browser"
        ],
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.0",
      "targets": [
        {
          "query": "from(bucket: \"iotuis\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\r\n  |> filter(fn: (r) => r[\"topic\"] == \"smartCampus/energyConsumption\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"metrics_0_value\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"telegraf\")\r\n  |> filter(fn: (r) => r[\"project\"] == \"smartcampusuis\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Consumo EnergÃ©tico",
      "type": "timeseries"
    }
  ],
  "preload": false,
  "refresh": "5s",
  "schemaVersion": 40,
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-5m",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "IoT dashboard",
  "uid": "beketfsvaxi4ga",
  "version": 24,
  "weekStart": ""
}